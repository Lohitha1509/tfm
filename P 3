import numpy as np
import matplotlib.pyplot as plt
import statsmodels.api as sm
np.random.seed(0)
white_noise = np.random.normal(0, 1, 1000)
sunspots_data = sm.datasets.sunspots.load_pandas().data
sunspots = sunspots_data["SUNACTIVITY"]
plt.figure(figsize=(10, 4))
plt.subplot(1, 2, 1)
plt.plot(white_noise)
plt.title('White Noise')
plt.xlabel('Time')
plt.ylabel('Amplitude')
plt.subplot(1, 2, 2)
plt.plot(sunspots)
plt.title('Sunspots Data')
plt.xlabel('Time')
plt.ylabel('Sunspots Count')
plt.tight_layout()
plt.show()
print("Augmented Dickey-Fuller Test for Sunspots Data:")
adf_result_sunspots = sm.tsa.stattools.adfuller(sunspots)
print(f"ADF Statistic: {adf_result_sunspots[0]}")
print(f"p-value: {adf_result_sunspots[1]}")
print("\nKwiatkowski–Phillips–Schmidt–Shin test for Sunspots Data:")
kpss_result_sunspots = sm.tsa.stattools.kpss(sunspots)
print(f"KPSS Statistic: {kpss_result_sunspots[0]}")
print(f"p-value: {kpss_result_sunspots[1]}")
print("\nAugmented Dickey-Fuller Test for White Noise:")
adf_result_white_noise = sm.tsa.stattools.adfuller(white_noise)
print(f"ADF Statistic: {adf_result_white_noise[0]}")
print(f"p-value: {adf_result_white_noise[1]}")
print("\nKwiatkowski–Phillips–Schmidt–Shin test for White Noise:")
kpss_result_white_noise = sm.tsa.stattools.kpss(white_noise)
print(f"KPSS Statistic: {kpss_result_white_noise[0]}")
print(f"p-value: {kpss_result_white_noise[1]}")
